{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Downloads/Pagos/frontend-stripe/src/CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError(null);\n    setSuccess(null);\n    const cardElement = elements.getElement(CardElement);\n\n    // Llamada a tu backend para crear el PaymentIntent\n    const response = await fetch('http://localhost:5000/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 1000\n      }) // Monto en centavos\n    });\n    const {\n      clientSecret\n    } = await response.json();\n    const {\n      error\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: cardElement\n      }\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      setSuccess('Pago exitoso');\n    }\n  };\n\n  // Aquí defines los estilos personalizados para el campo de Stripe\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '20px',\n        // Aumenta el tamaño del texto\n        color: '#424770',\n        letterSpacing: '0.025em',\n        fontFamily: 'Source Code Pro, monospace',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#9e2146'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      options: cardElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"lWrFfS7OwoTvSUhUFFnc5syAnVo=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","error","setError","success","setSuccess","handleSubmit","event","preventDefault","cardElement","getElement","response","fetch","method","headers","body","JSON","stringify","amount","clientSecret","json","confirmCardPayment","payment_method","card","message","cardElementOptions","style","base","fontSize","color","letterSpacing","fontFamily","invalid","onSubmit","children","options","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["/Users/angel/Downloads/Pagos/frontend-stripe/src/CheckoutForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(null);\n    setSuccess(null);\n  \n    const cardElement = elements.getElement(CardElement);\n    \n    // Llamada a tu backend para crear el PaymentIntent\n    const response = await fetch('http://localhost:5000/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ amount: 1000 }), // Monto en centavos\n    });\n  \n    const { clientSecret } = await response.json();\n  \n    const { error } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: cardElement,\n      },\n    });\n  \n    if (error) {\n      setError(error.message);\n    } else {\n      setSuccess('Pago exitoso');\n    }\n  };\n\n  // Aquí defines los estilos personalizados para el campo de Stripe\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '20px', // Aumenta el tamaño del texto\n        color: '#424770',\n        letterSpacing: '0.025em',\n        fontFamily: 'Source Code Pro, monospace',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#9e2146',\n      },\n    },\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* Aquí pasas las opciones de estilo a CardElement */}\n      <CardElement options={cardElementOptions} />\n      <button type=\"submit\" disabled={!stripe}>\n        Pagar\n      </button>\n      {error && <div>{error}</div>}\n      {success && <div>{success}</div>}\n    </form>\n  );\n};\n\nexport default CheckoutForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}